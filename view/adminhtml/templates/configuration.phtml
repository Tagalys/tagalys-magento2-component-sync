<style>
  #edit_form .tagalys-button-submit {
    background-color: #eb5202;
    border-color: #eb5202;
    color: #ffffff;
    text-shadow: 1px 1px 0 rgba(0, 0, 0, 0.25);
    font-size: 1.6rem;
    letter-spacing: .025em;
    padding-bottom: 0.6875em;
    padding-top: 0.6875em;
    border-radius: 0;
    width: auto;
  }
  .tagalys-button-important {
    background-color: #eb5202;
    border-color: #eb5202;
    color: #ffffff;
    text-shadow: 1px 1px 0 rgba(0, 0, 0, 0.25);
    font-size: 1.6rem;
    letter-spacing: .025em;
    padding: 0.6875em;
    border-radius: 0;
    display: inline-block;
  }
  .tagalys-button-important:hover {
    color: #ffffff;
  }
  .admin__scope-old .form-inline .fieldset > .field > .label span {
    word-break: inherit;
  }
</style>
<script>
    var syncManuallyUrl = '<?php echo $this->syncManuallyUrl(); ?>';
    var syncStatusUrl = '<?php echo $this->syncStatusUrl(); ?>';

    var tagalysManualSyncStarted = false;
    var tagalysClientSideWorkCompleted = false;
    var tagalysWaitingForTagalys = false;
    var tagalysSyncing = false;
    var tagalysLabelStartManualSync = 'Sync Manually';
    var tagalysLabelNothingToSync = 'Nothing to sync';
    var tagalysLabelSyncing = 'Manual sync in progress - do not close browser (click to pause)';
    var tagalysLabelManualSyncWaitingForTagalys = 'Waiting for Tagalys. You can close the browser.';
    var tagalysLabelManualSyncFinished = 'Finished syncing. You can close the browser.';

    function tagalysInterval(fn, time) {
      var timer = false;
      this.start = function () {
          if (!this.isRunning())
              timer = setInterval(fn, time);
      };
      this.stop = function () {
          clearInterval(timer);
          timer = false;
      };
      this.isRunning = function () {
          return timer !== false;
      };
    }
    var tagalysStatusUpdateInterval = new tagalysInterval(tagalysGetAndUpdateSyncStatus, 5000);
    var tagalysManualSyncIndicatorInterval = new tagalysInterval(tagalysUpdateManualSyncIndicator, 2000);
    var tagalysManualSyncTimeout = false;

    document.addEventListener("DOMContentLoaded", function (e) {
      tagalysGetAndUpdateSyncStatus();
    });

    // monitoring
    var tagalysMonitorInterval = new tagalysInterval(tagalysMonitorTimers, 5000);
    tagalysMonitorInterval.start();
    function tagalysMonitorTimers() {
      if (tagalysSyncing) {
          tagalysManualSyncIndicatorInterval.start();
          if (tagalysManualSyncTimeout === false) {
              tagalysManualSyncTimeout = setTimeout(tagalysSyncManually, 100);
          }
      } else {
          tagalysManualSyncIndicatorInterval.stop();
          tagalysStatusUpdateInterval.start();
      }
    }


    function tagalysToggleManualSync() {
      if (tagalysSyncing) {
          tagalysStopManualSync();
      } else {
          tagalysStartManualSync();
      }
    }
    function tagalysStopManualSync() {
      tagalysSyncing = false;

      // stop timer
      if (tagalysManualSyncTimeout === false) {
          // not running. nothing to do.
      } else {
          clearTimeout(tagalysManualSyncTimeout);
          tagalysManualSyncTimeout = false;
      }
      tagalysManualSyncIndicatorInterval.stop();

      tagalysUpdateSyncButtonLabel();

      // start updates
      tagalysStatusUpdateInterval.start();
    }
    function tagalysStartManualSync() {
      // stop timer if running
      if (tagalysManualSyncTimeout === false) {
          // not running. nothing to do.
      } else {
          clearTimeout(tagalysManualSyncTimeout);
          tagalysManualSyncTimeout = false;
      }

      // stop updates
      tagalysStatusUpdateInterval.stop();

      // start manual sync
      tagalysSyncing = true;
      tagalysManualSyncTimeout = setTimeout(tagalysSyncManually, 100);
      tagalysManualSyncIndicatorInterval.start();
      tagalysUpdateSyncButtonLabel();
    }
    function tagalysUpdateSyncButtonLabel() {
      var toggleButton = document.getElementById('tagalys-toggle-manual-sync');
      if (tagalysSyncing) {
          toggleButton.innerHTML = tagalysLabelSyncing;
      } else {
          if (tagalysClientSideWorkCompleted) {
              if (tagalysWaitingForTagalys) {
                  toggleButton.innerHTML = tagalysLabelManualSyncWaitingForTagalys;
              } else {
                  if (tagalysManualSyncStarted) {
                      toggleButton.innerHTML = tagalysLabelManualSyncFinished;
                  } else {
                      toggleButton.innerHTML = tagalysLabelNothingToSync;
                  }
              }
          } else {
              toggleButton.innerHTML = tagalysLabelStartManualSync;
          }
      }
    }
    function tagalysUpdateManualSyncIndicator() {
      if (tagalysSyncing) {
          var toggleButton = document.getElementById('tagalys-toggle-manual-sync');
          var currentIndicator = toggleButton.innerHTML;
          var currentDotStr = currentIndicator.substr(tagalysLabelSyncing.length, 3);
          var nextDotStr = '...';
          switch(currentDotStr) {
              case '.':
                  nextDotStr = '..';
                  break;
              case '..':
                  nextDotStr = '...';
                  break;
              case '...':
                  nextDotStr = '.';
                  break;
          }
          toggleButton.innerHTML = tagalysLabelSyncing + nextDotStr;
      }
    }
    function tagalysSyncManually() {
      tagalysManualSyncStarted = true;
      if (tagalysSyncing) {
          require([
              "jquery"
          ], function ($) {
              $.ajax({
                  url: syncManuallyUrl,
                  method: 'POST',
                  data: { form_key: window.FORM_KEY },
                  success: function(data, textStatus, jqXHR) {
                      updateSyncStatus(data);
                      if (data.client_side_work_completed == true) {
                          tagalysStopManualSync();
                      } else {
                          tagalysManualSyncTimeout = setTimeout(tagalysSyncManually, 100);
                      }
                  },
                  error: function(jqXHR, textStatus, errorThrown) {
                    tagalysManualSyncTimeout = false;
                  }
              });
          });
      } else {
          // don't do anything
          tagalysManualSyncTimeout = false;
      }
    }
    function tagalysGetAndUpdateSyncStatus() {
        require([
            "jquery"
        ], function ($) {
            if (tagalysSyncing == false) {
                $.ajax({
                    url: syncStatusUrl,
                    method: 'POST',
                    data: { form_key: window.FORM_KEY },
                    success: function(data, textStatus, jqXHR) {
                        // var syncStatus = JSON.parse(data);
                        updateSyncStatus(data);
                    }
                });
            }
        });
    }
    function updateSyncStatus(syncStatus) {
      tagalysClientSideWorkCompleted = syncStatus.client_side_work_completed;
      if (syncStatus.waiting_for_tagalys == true) {
          tagalysWaitingForTagalys = true;
      } else {
          tagalysWaitingForTagalys = false;
      }
      tagalysUpdateSyncButtonLabel();
      document.getElementById('note_sync_status').innerHTML = syncStatus.status;
      for (store_id in syncStatus.stores) {
          document.getElementById('store_' + store_id + '_note_setup_complete').innerHTML = (syncStatus.stores[store_id].setup_complete ? 'Yes' : 'No');
          var toggleButton = document.getElementById('tagalys-toggle-manual-sync');
          if (toggleButton.innerHTML == 'Sync Now') {
              var feed_status = syncStatus.stores[store_id].feed_status;
          } else {
              var feed_status = syncStatus.stores[store_id].feed_status.replace('Waiting to write', 'Writing');
          }
          document.getElementById('store_' + store_id + '_note_feed_status').innerHTML = feed_status;
          document.getElementById('store_' + store_id + '_note_updates_status').innerHTML = syncStatus.stores[store_id].updates_status;
      }
    }
</script>